/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reposicionlab2_rubenmaldonado;

import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Ruben Dario Arias
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();

    }
    ArrayList<normal> simple = new ArrayList();
    ArrayList<superh> complex = new ArrayList();
    public int auxiliar;
    int flag = 1;
    Random r = new Random();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agrega = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        codigon = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        rn = new javax.swing.JSpinner();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        codigos = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        rs = new javax.swing.JSpinner();
        jButton4 = new javax.swing.JButton();
        carga = new javax.swing.JDialog();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablenormal = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablenormal1 = new javax.swing.JTable();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        Simulacion = new javax.swing.JDialog();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        combonormal = new javax.swing.JComboBox<>();
        jButton18 = new javax.swing.JButton();
        bn = new javax.swing.JProgressBar();
        jPanel8 = new javax.swing.JPanel();
        combosuper = new javax.swing.JComboBox<>();
        jButton19 = new javax.swing.JButton();
        bs = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("Codigo");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        codigon.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
        jPanel2.add(codigon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 130, -1));

        jLabel5.setText("Nivel De Riesgo");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

        rn.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        jPanel2.add(rn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 120, -1));

        jButton5.setText("Agregar");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jPanel2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 100, -1));

        jTabbedPane1.addTab("Hackeo Normal", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Codigo");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 40, 30));

        codigos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####"))));
        jPanel3.add(codigos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 120, -1));

        jLabel3.setText("Nivel de Riesgo");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        rs.setModel(new javax.swing.SpinnerNumberModel(6, 6, 10, 1));
        jPanel3.add(rs, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 140, -1));

        jButton4.setText("Agregar");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jPanel3.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 140, -1));

        jTabbedPane1.addTab("Super Hackeo", jPanel3);

        javax.swing.GroupLayout agregaLayout = new javax.swing.GroupLayout(agrega.getContentPane());
        agrega.getContentPane().setLayout(agregaLayout);
        agregaLayout.setHorizontalGroup(
            agregaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        agregaLayout.setVerticalGroup(
            agregaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
        );

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("Hackeos Normales");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, 32));

        tablenormal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Hackeo", "Nivel de Riesgo", "Hackeos Exitosos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablenormal);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 340, 100));

        jButton6.setText("Listar");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jPanel4.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 80, -1));

        jButton7.setText("Refrescar");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        jPanel4.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));

        jButton8.setText("Modificar");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });
        jPanel4.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, -1, -1));

        jButton9.setText("Guardar");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });
        jPanel4.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, -1, -1));

        jButton11.setText("Eliminar");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });
        jPanel4.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, -1, -1));

        jTabbedPane2.addTab("Normales", jPanel4);

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("Super Hackeos");
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, 32));

        tablenormal1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Hackeo", "Nivel de Riesgo", "Hackeos Fallidos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablenormal1);

        jPanel6.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 340, 100));

        jButton12.setText("Listar");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });
        jPanel6.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 80, -1));

        jButton13.setText("Refrescar");
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton13MouseClicked(evt);
            }
        });
        jPanel6.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));

        jButton14.setText("Modificar");
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14MouseClicked(evt);
            }
        });
        jPanel6.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, -1, -1));

        jButton15.setText("Guardar");
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton15MouseClicked(evt);
            }
        });
        jPanel6.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, -1, -1));

        jButton17.setText("Eliminar");
        jButton17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton17MouseClicked(evt);
            }
        });
        jPanel6.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, -1, -1));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 273, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane2.addTab("Super", jPanel5);

        javax.swing.GroupLayout cargaLayout = new javax.swing.GroupLayout(carga.getContentPane());
        carga.getContentPane().setLayout(cargaLayout);
        cargaLayout.setHorizontalGroup(
            cargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        cargaLayout.setVerticalGroup(
            cargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        combonormal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combonormalItemStateChanged(evt);
            }
        });

        jButton18.setText("Cargar Hackeos");
        jButton18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton18MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addComponent(combonormal, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addComponent(jButton18)))
                .addGap(40, 40, 40))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combonormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton18))
                .addGap(30, 30, 30)
                .addComponent(bn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Normal", jPanel7);

        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        combosuper.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combosuperItemStateChanged(evt);
            }
        });
        jPanel8.add(combosuper, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 140, -1));

        jButton19.setText("Cargar Hackeos");
        jButton19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton19MouseClicked(evt);
            }
        });
        jPanel8.add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, -1, -1));
        jPanel8.add(bs, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 290, -1));

        jTabbedPane3.addTab("Super", jPanel8);

        javax.swing.GroupLayout SimulacionLayout = new javax.swing.GroupLayout(Simulacion.getContentPane());
        Simulacion.getContentPane().setLayout(SimulacionLayout);
        SimulacionLayout.setHorizontalGroup(
            SimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        SimulacionLayout.setVerticalGroup(
            SimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 24)); // NOI18N
        jLabel1.setText("HACKEOS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 120, 60));

        jButton1.setText("AGREGAR");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 570, 40));

        jButton2.setText("CARGAR HACKEOS");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 570, 50));

        jButton3.setText("SIMULACION HACKEO");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 570, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        agrega.setModal(true);
        agrega.pack();
        agrega.setLocationRelativeTo(this);
        agrega.setVisible(true);


    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        int code = ((Number) codigon.getValue()).intValue();
        int nr = ((Number) rn.getValue()).intValue();
        normal n = new normal(code, nr);
        simple.add(n);
        JOptionPane.showMessageDialog(agrega, "Se ha agregado correctamente");
        codigon.setValue(null);
        rn.setValue(1);

    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        int code = ((Number) codigos.getValue()).intValue();
        int nr = ((Number) rs.getValue()).intValue();
        superh s = new superh(code, nr);
        complex.add(s);
        JOptionPane.showMessageDialog(agrega, "Se ha agregado correctamente");
        codigos.setValue(null);
        rs.setValue(6);

    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        carga.setModal(true);
        carga.pack();
        carga.setLocationRelativeTo(this);
        carga.setVisible(true);

    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        DefaultTableModel modelo
                = (DefaultTableModel) tablenormal.getModel();
        // modelo.addRow(newRow);
        // table.setModel(modelo);
        if (!simple.isEmpty()) {
            for (int i = 0; i < simple.size(); i++) {
                Object[] newRow = {((normal) simple.get(i)).getCode(), ((normal) simple.get(i)).getRiesgo(), ((normal) simple.get(i)).getHackeosexitosos()
                };
                modelo.addRow(newRow);
            }
        } else {
            JOptionPane.showMessageDialog(carga, "No hay hackeos normales");
        }
        tablenormal.setModel(modelo);


    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        if (tablenormal.getSelectedRow() >= 0) {
            DefaultTableModel modelo
                    = (DefaultTableModel) tablenormal.getModel();
            Object name = modelo.getValueAt(tablenormal.getSelectedRow(), 0);
            Object cuenta = modelo.getValueAt(tablenormal.getSelectedRow(), 1);
            int nombre = (int) name;
            int number = (int) cuenta;
            for (int i = 0; i < simple.size(); i++) {
                int aux = ((normal) simple.get(i)).getCode();
                int aux2 = ((normal) simple.get(i)).getRiesgo();
                if (aux == nombre && aux2 == number) {
                    auxiliar = i;
                    int c = Integer.parseInt(JOptionPane.showInputDialog("Nuevo codigo"));
                    int r = Integer.parseInt(JOptionPane.showInputDialog("Nuevo nivel de riesgo"));
                    if (r >= 1 && r <= 5) {
                        ((normal) simple.get(i)).setCode(c);
                        ((normal) simple.get(i)).setRiesgo(r);
                        JOptionPane.showMessageDialog(carga, "Se han modificado los datos correctamente, para ver los cambios refresce la tabla");
                    } else {
                        ((normal) simple.get(i)).setCode(c);
                        JOptionPane.showMessageDialog(carga, "Se han modificado los datos correctamente, exceptuando el nivel de riesgo, refresce la tabla para ver cambios");
                    }

                }
            }

        } else {
            JOptionPane.showMessageDialog(carga, "Seleccione un hackeo");
        }


    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        tablenormal.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Codigo Hackeo", "Nivel de Riesgo", "Hackeos Exitosos"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel modelo
                = (DefaultTableModel) tablenormal.getModel();
        // modelo.addRow(newRow);
        // table.setModel(modelo);
        if (!simple.isEmpty()) {
            for (int i = 0; i < simple.size(); i++) {
                Object[] newRow = {((normal) simple.get(i)).getCode(), ((normal) simple.get(i)).getRiesgo(), ((normal) simple.get(i)).getHackeosexitosos()
                };
                modelo.addRow(newRow);
            }
        } else {
            JOptionPane.showMessageDialog(carga, "No hay hackeos normales");
        }
        tablenormal.setModel(modelo);

    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        if (tablenormal.getSelectedRow() >= 0) {
            DefaultTableModel modelo
                    = (DefaultTableModel) tablenormal.getModel();
            int row = tablenormal.getSelectedRow();
            Object name = modelo.getValueAt(tablenormal.getSelectedRow(), 0);
            Object cuenta = modelo.getValueAt(tablenormal.getSelectedRow(), 1);
            int nombre = (int) name;
            int number = (int) cuenta;
            for (int i = 0; i < simple.size(); i++) {
                int aux = ((normal) simple.get(i)).getCode();
                int aux2 = ((normal) simple.get(i)).getRiesgo();
                if (aux == nombre && aux2 == number) {
                    auxiliar = i;
                    modelo.removeRow(row);
                    simple.remove(i);
                    JOptionPane.showMessageDialog(carga, "Hackeo eliminado exitosamente");

                }
            }
            tablenormal.setModel(modelo);

        } else {
            JOptionPane.showMessageDialog(carga, "Seleccione un hackeo");
        }

    }//GEN-LAST:event_jButton11MouseClicked

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked
        DefaultTableModel modelo
                = (DefaultTableModel) tablenormal1.getModel();
        // modelo.addRow(newRow);
        // table.setModel(modelo);
        if (!complex.isEmpty()) {
            for (int i = 0; i < complex.size(); i++) {
                Object[] newRow = {((superh) complex.get(i)).getCode2(), ((superh) complex.get(i)).getRiesgo2(), ((superh) complex.get(i)).getFallidos()
                };
                modelo.addRow(newRow);
            }
        } else {
            JOptionPane.showMessageDialog(carga, "No hay super hackeos");
        }
        tablenormal1.setModel(modelo);
    }//GEN-LAST:event_jButton12MouseClicked

    private void jButton13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseClicked
        tablenormal1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Codigo Hackeo", "Nivel de Riesgo", "Hackeos Fallidos"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        DefaultTableModel modelo
                = (DefaultTableModel) tablenormal1.getModel();
        // modelo.addRow(newRow);
        // table.setModel(modelo);
        if (!complex.isEmpty()) {
            for (int i = 0; i < complex.size(); i++) {
                Object[] newRow = {((superh) complex.get(i)).getCode2(), ((superh) complex.get(i)).getRiesgo2(), ((superh) complex.get(i)).getFallidos()
                };
                modelo.addRow(newRow);
            }
        } else {
            JOptionPane.showMessageDialog(carga, "No hay super hackeos");
        }
        tablenormal1.setModel(modelo);
    }//GEN-LAST:event_jButton13MouseClicked

    private void jButton14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14MouseClicked
        if (tablenormal1.getSelectedRow() >= 0) {
            DefaultTableModel modelo
                    = (DefaultTableModel) tablenormal1.getModel();
            Object name = modelo.getValueAt(tablenormal1.getSelectedRow(), 0);
            Object cuenta = modelo.getValueAt(tablenormal1.getSelectedRow(), 1);
            int nombre = (int) name;
            int number = (int) cuenta;
            for (int i = 0; i < complex.size(); i++) {
                int aux = ((superh) complex.get(i)).getCode2();
                int aux2 = ((superh) complex.get(i)).getRiesgo2();
                if (aux == nombre && aux2 == number) {
                    auxiliar = i;
                    int c = Integer.parseInt(JOptionPane.showInputDialog("Nuevo codigo"));
                    int r = Integer.parseInt(JOptionPane.showInputDialog("Nuevo nivel de riesgo"));
                    if (r >= 6 && r <= 10) {
                        ((superh) complex.get(i)).setCode2(c);
                        ((superh) complex.get(i)).setRiesgo2(r);
                        JOptionPane.showMessageDialog(carga, "Se han modificado los datos correctamente, para ver los cambios refresce la tabla");
                    } else {
                        ((superh) complex.get(i)).setCode2(c);
                        JOptionPane.showMessageDialog(carga, "Se han modificado los datos correctamente, exceptuando el nivel de riesgo, refresce la tabla para ver cambios");
                    }

                }
            }

        } else {
            JOptionPane.showMessageDialog(carga, "Seleccione un hackeo");
        }
    }//GEN-LAST:event_jButton14MouseClicked

    private void jButton17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton17MouseClicked
        if (tablenormal1.getSelectedRow() >= 0) {
            DefaultTableModel modelo
                    = (DefaultTableModel) tablenormal1.getModel();
            int row = tablenormal1.getSelectedRow();
            Object name = modelo.getValueAt(tablenormal1.getSelectedRow(), 0);
            Object cuenta = modelo.getValueAt(tablenormal1.getSelectedRow(), 1);
            int nombre = (int) name;
            int number = (int) cuenta;
            for (int i = 0; i < complex.size(); i++) {
                int aux = ((superh) complex.get(i)).getCode2();
                int aux2 = ((superh) complex.get(i)).getRiesgo2();
                if (aux == nombre && aux2 == number) {
                    auxiliar = i;
                    modelo.removeRow(row);
                    complex.remove(i);
                    JOptionPane.showMessageDialog(carga, "Hackeo eliminado exitosamente");

                }
            }
            tablenormal.setModel(modelo);

        } else {
            JOptionPane.showMessageDialog(carga, "Seleccione un hackeo");
        }
    }//GEN-LAST:event_jButton17MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked

        Simulacion.setModal(true);
        Simulacion.pack();
        Simulacion.setLocationRelativeTo(this);
        Simulacion.setVisible(true);

    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton18MouseClicked
        DefaultComboBoxModel dd
                = (DefaultComboBoxModel) combonormal.getModel();
        if (!simple.isEmpty()) {
            for (int i = 0; i < simple.size(); i++) {
                normal n = simple.get(i);
                dd.addElement(n);

            }
            combonormal.setModel(dd);
        } else {
            JOptionPane.showMessageDialog(Simulacion, "No hay hackeos disponibles");
        }


    }//GEN-LAST:event_jButton18MouseClicked

    private void combonormalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combonormalItemStateChanged
        if (!simple.isEmpty()) {
            if (flag == 1) {
                if (evt.getStateChange() == 2) {
                    normal al = (normal) combonormal.getSelectedItem();
                    for (int i = 0; i < simple.size(); i++) {
                        if (al == simple.get(i)) {
                            auxiliar = i;
                        }
                    }

                    int random = 1 + r.nextInt(10);
                    int carac = Integer.parseInt(JOptionPane.showInputDialog(Simulacion, "Cantidad de caracteres con las que desea probar el hackeo"));

                    if (random == carac) {
                        JOptionPane.showMessageDialog(Simulacion, "Hackeo Cancelado");
                    } else {
                        JOptionPane.showMessageDialog(Simulacion, "El hackeo a sido un exito");
                        bn.setValue(0);
                        int total = carac * 2000;
                        b = new BarraH(bn, total);
                        b.start();
                        b.setAvanzar(true);
                        b.setVida(true);
                        ((normal) simple.get(auxiliar)).setHackeosexitosos(1);
                    }
                }
            }
        }

    }//GEN-LAST:event_combonormalItemStateChanged

    private void jButton19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton19MouseClicked
        DefaultComboBoxModel dd
                = (DefaultComboBoxModel) combosuper.getModel();
        if (!complex.isEmpty()) {
            for (int i = 0; i < complex.size(); i++) {
                superh n = complex.get(i);
                dd.addElement(n);

            }
            combosuper.setModel(dd);
        } else {
            JOptionPane.showMessageDialog(Simulacion, "No hay hackeos disponibles");
        }


    }//GEN-LAST:event_jButton19MouseClicked

    private void combosuperItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combosuperItemStateChanged
        if (!complex.isEmpty()) {
            if (flag == 1) {
                if (evt.getStateChange() == 2) {
                    superh al = (superh) combosuper.getSelectedItem();
                    for (int i = 0; i < complex.size(); i++) {
                        if (al == complex.get(i)) {
                            auxiliar = i;
                        }
                    }

                    int random = 6 + r.nextInt(10);
                    int carac = Integer.parseInt(JOptionPane.showInputDialog(Simulacion, "Cantidad de caracteres con las que desea probar el hackeo"));

                    if (random == carac) {
                        JOptionPane.showMessageDialog(Simulacion, "Hackeo Cancelado");
                        ((superh) complex.get(auxiliar)).setFallidos(1);
                    } else {
                        JOptionPane.showMessageDialog(Simulacion, "El hackeo a sido un exito");
                        bs.setValue(0);
                        int total = carac * 1000;
                        JOptionPane.showMessageDialog(Simulacion, total);
                        c = new BarraH(bs, total);
                        c.start();
                        c.setAvanzar(true);
                        c.setVida(true);
                    }
                }
            }
        }
    }//GEN-LAST:event_combosuperItemStateChanged

    private void jButton15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton15MouseClicked
        if (tablenormal1.getSelectedRow() >= 0) {
            DefaultTableModel modelo
                    = (DefaultTableModel) tablenormal1.getModel();
            Object name = modelo.getValueAt(tablenormal1.getSelectedRow(), 0);
            Object cuenta = modelo.getValueAt(tablenormal1.getSelectedRow(), 1);
            int nombre = (int) name;
            int number = (int) cuenta;
            for (int i = 0; i < complex.size(); i++) {
                int aux = ((superh) complex.get(i)).getCode2();
                int aux2 = ((superh) complex.get(i)).getRiesgo2();
                if (aux == nombre && aux2 == number) {
                    superh n = complex.get(i);
                    auxiliar = i;
                    adminS ap
                            = new adminS("./SuperHackeos.txt");
                    ap.cargarArchivo();
                    ap.getSupere().add(n);
                    try {
                        ap.escribirArchivo();
                        JOptionPane.showMessageDialog(carga, "Se ha guardado exitosamente la informacion en un archivo de texto");

                    } catch (IOException ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(bn, "Seleccione un hackeo de la tabla");
        }
    }//GEN-LAST:event_jButton15MouseClicked

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        if (tablenormal.getSelectedRow() >= 0) {
            DefaultTableModel modelo
                    = (DefaultTableModel) tablenormal.getModel();
            Object name = modelo.getValueAt(tablenormal.getSelectedRow(), 0);
            Object cuenta = modelo.getValueAt(tablenormal.getSelectedRow(), 1);
            int nombre = (int) name;
            int number = (int) cuenta;
            for (int i = 0; i < simple.size(); i++) {
                int aux = ((normal) simple.get(i)).getCode();
                int aux2 = ((normal) simple.get(i)).getRiesgo();
                if (aux == nombre && aux2 == number) {
                    normal n = simple.get(i);
                    auxiliar = i;
                    adminN ap
                            = new adminN("./HackeosNormales.txt");
                    ap.cargarArchivo();
                    ap.getNormales().add(n);
                    try {
                        ap.escribirArchivo();
                        JOptionPane.showMessageDialog(carga, "Se ha guardado exitosamente la informacion en un archivo de texto");

                    } catch (IOException ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(bn, "Seleccione un hackeo de la tabla");
        }
    }//GEN-LAST:event_jButton9MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Simulacion;
    private javax.swing.JDialog agrega;
    private javax.swing.JProgressBar bn;
    private javax.swing.JProgressBar bs;
    private javax.swing.JDialog carga;
    private javax.swing.JFormattedTextField codigon;
    private javax.swing.JFormattedTextField codigos;
    private javax.swing.JComboBox<String> combonormal;
    private javax.swing.JComboBox<String> combosuper;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JSpinner rn;
    private javax.swing.JSpinner rs;
    private javax.swing.JTable tablenormal;
    private javax.swing.JTable tablenormal1;
    // End of variables declaration//GEN-END:variables
BarraH b;
    BarraH c;
}
